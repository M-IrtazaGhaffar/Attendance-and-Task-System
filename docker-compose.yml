services:
  server1:
    build:
      context: ./server
      dockerfile: Dockerfile
    expose:
      - "5000"
    # ports:
    #   - "5000:5000"
    # volumes:
    #   - ./server:/app # Mount local ./server to /app in container
    #   - /app/node_modules  # Prevent overwriting node_modules inside container
    environment:
      - PORT=5000
      - JWT_EXPIRES_IN=7d
      - JWT_SECRET=AnySecretHere
      - DATABASE_URL=postgresql://user:user@db:5432/userdb
    depends_on:
      - db
    command: sh -c "sleep 10 && npx prisma migrate deploy && node --watch server.js"
    networks:
      - app-network

  server2:
    build:
      context: ./server
      dockerfile: Dockerfile
    expose:
      - "5000"
    # ports:
    #   - "5001:5000"
    # volumes:
    #   - ./server:/app # Mount local ./server to /app in container
    #   - /app/node_modules  # Prevent overwriting node_modules inside container
    environment:
      - PORT=5000
      - JWT_EXPIRES_IN=7d
      - JWT_SECRET=AnySecretHere
      - DATABASE_URL=postgresql://user:user@db:5432/userdb
    depends_on:
      - db
      - server1
    command: sh -c "sleep 10 && node --watch server.js"
    networks:
      - app-network

  server3:
    build:
      context: ./server
      dockerfile: Dockerfile
    expose:
      - "5000"
    # ports:
    #   - "5002:5000"
    # volumes:
    #   - ./server:/app # Mount local ./server to /app in container
    #   - /app/node_modules  # Prevent overwriting node_modules inside container
    environment:
      - PORT=5000
      - JWT_EXPIRES_IN=7d
      - JWT_SECRET=AnySecretHere
      - DATABASE_URL=postgresql://user:user@db:5432/userdb
    depends_on:
      - db
      - server2
    command: sh -c "sleep 10 && node --watch server.js"
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    # ports:
    #   - "3000:3000"
    # volumes:
    #   - ./client:/app # Mount local ./server to /app in container
    #   - /app/node_modules  # Prevent overwriting node_modules inside container
    expose:
      - 3000
    depends_on:
      - db
    command: npm run start
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server1
      - server2
      - server3
      - client
    networks:
      - app-network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user
      - POSTGRES_DB=userdb
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:


networks:
  app-network:
    driver: bridge
